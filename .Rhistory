library(here)
#Set up here: load data and quality control
library(tidyverse)
library(vegan)
library(readxl)
library(lubridate)
###create functions
#Function for calculating the eDNA Index from Kelly et al. 2019
eDNA_index <- function(community_matrix){
#community matrix with samples in cols, species in rows
require(vegan)
props <- decostand(community_matrix, method = "total", MARGIN = 2)
idx <- decostand(props, method = "max", MARGIN = 1)
idx <- as.data.frame(idx)
colnames(idx) <- colnames(community_matrix)
row.names(idx) <- row.names(community_matrix)
return(idx)
}
meta <- read.csv(here("data/Field_Data_Sheet_Digitized.csv")) #metadata
###load data: COI
COI_01 <- read.csv(here("data/FHL04_LoLe_taxon_table_wide.csv")) #raw data
###load data: MV1
MV1_01 <- read.csv(here("data/FHL02_MV1_taxon_table_wide.csv")) #raw data
###load data: MFU
MFU_01 <- read.csv(here("data/FHL03_MFU_taxon_table_wide.csv")) #raw data
#First remove the samples that matched barcodes with previous run in the flowcell due to carryover
carryover_samples <- c(
"FHL094","FHL071","FHL095","FHL078","FHL096",
"ENC4A","FHL097","ENC5B","FHL021","ENC6C",
"FHL036","FHL050","PCRNa","FHL064","PCRNb"
)
COI_02 <- COI_01 %>%
select(!matches(paste(corryover_samples, collapse = "|")))
COI_02 <- COI_01 %>%
select(!matches(paste(carryover_samples, collapse = "|")))
#QC the raw data for min read depth
COI_03 <- COI_02 %>%
dplyr::select(-2) %>%
drop_na() %>%
pivot_longer(cols = -BestTaxon) %>%
filter(value > 0) %>%
group_by(BestTaxon) %>%
add_tally() %>%
filter(n > 5) %>% ##FILTER for min occurrences
dplyr::select(-n) %>%
pivot_wider(names_from = name, values_from = value, values_fill = 0) %>%
column_to_rownames("BestTaxon") %>%
t() %>%
as.data.frame() %>%
mutate(tot = rowSums(.)) %>%
filter(tot > 10000) %>% ##FILTER for total read-depth in sample
dplyr::select(-tot) %>%
dplyr::select(which(colSums(.) > 0))
MV1_02 <- MV1_01 %>%
dplyr::select(-2) %>%
drop_na() %>%
pivot_longer(cols = -BestTaxon) %>%
filter(value > 0) %>%
group_by(BestTaxon) %>%
add_tally() %>%
filter(n > 5) %>% ##FILTER for min occurrences
dplyr::select(-n) %>%
pivot_wider(names_from = name, values_from = value, values_fill = 0) %>%
column_to_rownames("BestTaxon") %>%
t() %>%
as.data.frame() %>%
mutate(tot = rowSums(.)) %>%
filter(tot > 10000) %>% ##FILTER for total read-depth in sample
dplyr::select(-tot) %>%
dplyr::select(which(colSums(.) > 0))
MFU_02 <- MFU_01 %>%
dplyr::select(-2) %>%
drop_na() %>%
pivot_longer(cols = -BestTaxon) %>%
filter(value > 0) %>%
group_by(BestTaxon) %>%
add_tally() %>%
filter(n > 5) %>% ##FILTER for min occurrences
dplyr::select(-n) %>%
pivot_wider(names_from = name, values_from = value, values_fill = 0) %>%
column_to_rownames("BestTaxon") %>%
t() %>%
as.data.frame() %>%
mutate(tot = rowSums(.)) %>%
filter(tot > 10000) %>% ##FILTER for total read-depth in sample
dplyr::select(-tot) %>%
dplyr::select(which(colSums(.) > 0))
#get relevant metadata
COI_m <- meta %>%
dplyr::select(Tube.Number, Date, Time.Finish, Day.Night, Treatment..Light..NoLight..FieldNegative., Temperature, Salinity) %>%
rename(Treatment = Treatment..Light..NoLight..FieldNegative.,
Tube = Tube.Number,
Time = Time.Finish) %>%
mutate(Date = mdy(Date),
Time = hm(Time)) %>%
mutate(datetime = ymd_hms(paste(Date, Time)))
MV1_m <- meta %>%
dplyr::select(Tube.Number, Date, Time.Finish, Day.Night, Treatment..Light..NoLight..FieldNegative., Temperature, Salinity) %>%
rename(Treatment = Treatment..Light..NoLight..FieldNegative.,
Tube = Tube.Number,
Time = Time.Finish) %>%
mutate(Date = mdy(Date),
Time = hm(Time)) %>%
mutate(datetime = ymd_hms(paste(Date, Time)))
MFU_m <- meta %>%
dplyr::select(Tube.Number, Date, Time.Finish, Day.Night, Treatment..Light..NoLight..FieldNegative., Temperature, Salinity) %>%
rename(Treatment = Treatment..Light..NoLight..FieldNegative.,
Tube = Tube.Number,
Time = Time.Finish) %>%
mutate(Date = mdy(Date),
Time = hm(Time)) %>%
mutate(datetime = ymd_hms(paste(Date, Time)))
#make rownames consistent across data and metadata, etc
COI_04 <- COI_03 %>%
rownames_to_column("Tube") %>%
mutate(Tube = str_replace_all(Tube, pattern = "LoLe\\.FHL", replacement = ""),
Tube = str_replace_all(Tube, pattern = "\\.COI.+", replacement = "")) %>%
mutate(Tube = as.numeric(Tube)) %>%
column_to_rownames("Tube")
MV1_03 <- MV1_02 %>%
rownames_to_column("Tube") %>%
mutate(Tube = str_replace_all(Tube, pattern = "MV1\\.FHL", replacement = ""),
Tube = str_replace_all(Tube, pattern = "_MV1", replacement = "")) %>%
mutate(Tube = as.numeric(Tube)) %>%
column_to_rownames("Tube")
MFU_03 <- MFU_02 %>%
rownames_to_column("Tube") %>%
mutate(Tube = str_replace_all(Tube, pattern = "MFU\\.FHL", replacement = ""),
Tube = str_replace_all(Tube, pattern = "_MFU", replacement = "")) %>%
mutate(Tube = as.numeric(Tube)) %>%
column_to_rownames("Tube")
MFU_03 <- MFU_02 %>%
rownames_to_column("Tube") %>%
mutate(Tube = str_replace_all(Tube, pattern = "MFU\\.FHL", replacement = ""),
Tube = str_replace_all(Tube, pattern = "_MFU+", replacement = "")) %>%
mutate(Tube = as.numeric(Tube)) %>%
column_to_rownames("Tube")
View(MFU_02)
View(MV1_02)
#filter metadata to just samples we kept after QC
COI_p <- COI_m %>%
filter(Tube %in% rownames(COI_04))
COI_p <- COI_p[order(COI_p$Tube),]
COI_p <- COI_p %>%
unite(c(Date, Day.Night, Treatment), col = tmp, remove = F) %>%
mutate(time_idx = match(tmp, unique(tmp)))
MV1_p <- MV1_m %>%
filter(Tube %in% rownames(MV1_03))
MV1_p <- MV1_p[order(MV1_p$Tube),]
MV1_p <- MV1_p %>%
unite(c(Date, Day.Night, Treatment), col = tmp, remove = F) %>%
mutate(time_idx = match(tmp, unique(tmp)))
MFU_p <- MFU_m %>%
filter(Tube %in% rownames(MFU_03))
MFU_p <- MFU_p[order(MFU_p$Tube),]
#reorder to mirror metadata
COI_04 <- COI_04[order(as.numeric(rownames(COI_04))),]
##COI
#make pres/absence dataset
COI_bin = COI_04
COI_bin[COI_bin>0]<-1
#make eDNA index dataset
COI_idx = COI_04 %>%
eDNA_index()
# pres/absence
dist_coi <- COI_bin %>%
vegdist(method = "jaccard", binary = T)
MDScoi <- dist_coi %>%
metaMDS(trymax = 1000)
View(COI_p)
?bind_cols
View(MDScoi)
MDS_coi <- dist_coi %>%
metaMDS(trymax = 1000)
View(MDS_coi)
COI_p %>%
bind_cols(MDS_coi$points) %>%
ggplot(aes(x = MDS1, y = MDS2, color = Day.Night, shape = Treatment)) +
geom_point() +
stat_chull(aes(fill = Day.Night), alpha = 0.3) +
theme_minimal()
library(ggalt)
install.packages('ggalt')
library(ggalt)
devtools::install_github("hrbrmstr/ggalt")
install.packages("remotes")
remotes::install_github("david-barnett/microViz")
library(microViz)
BiocManager::install("rhdf5")
library(microViz)
COI_p %>%
bind_cols(MDS_coi$points) %>%
ggplot(aes(x = MDS1, y = MDS2, color = Day.Night, shape = Treatment)) +
geom_point() +
stat_chull(aes(fill = Day.Night), alpha = 0.3) +
theme_minimal()
library(pairwiseAdonis)
install.packages('pairwiseAdonis')
library(pairwiseAdonis)
library(vegan)
library(pairwiseAdonis)
# permanova
res <- adonis2(as.matrix(dist_coi) ~ interaction(COI_p$Day.Night,COI_p$Treatment))
res
pairwise.adonis2(dist_coi ~ MDS_coi, data= COI_p %>% mutate(f=paste0(Day.Night,Treatment)), p.adjust.m = "BY")
library(pairwiseAdonis)
devtools::install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
remotes::install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
library(pairwiseAdonis)
# posthoc
pairwise.adonis2(dist_coi ~ MDS_coi, data= COI_p %>% mutate(f=paste0(Day.Night,Treatment)), p.adjust.m = "BY")
# posthoc
pairwise.adonis2(dist_coi ~ MDS_coi, data= COI_p %>% mutate(MDS_coi=paste0(Day.Night,Treatment)), COI_p.adjust.m = "BY")
# permutational dispersion
disp_coi <- betadisper(dist_coi,interaction(COI_p$Day.Night,COI_p$Treatment))
perm_disp_res <- permutest(disp_coi, pairwise = T ,permutations = how(nperm=999))
perm_disp_res
View(COI_idx)
## eDNA index
dist_coi_index <- COI_idx %>%
vegdist(method = "bray")
MDS_coi_idx <- dist_coi_index %>%
metaMDS(trymax = 1000)
COI_p %>%
bind_cols(MDS_coi_idx$points) %>%
ggplot(aes(x = MDS1, y = MDS2, color = Day.Night, shape = Treatment)) +
geom_point() +
stat_chull(aes(fill = Day.Night), alpha = 0.3) +
theme_minimal()
## eDNA index
dist_coi_index <- COI_idx %>%
t() %>%
vegdist(method = "bray")
MDS_coi_idx <- dist_coi_index %>%
metaMDS(trymax = 1000)
## eDNA index
dist_coi_index <- COI_idx %>%
vegdist(method = "bray")
MDS_coi_idx <- dist_coi_index %>%
metaMDS(trymax = 1000)
COI_p %>%
bind_cols(MDS_coi_idx$points) %>%
ggplot(aes(x = MDS1, y = MDS2, color = Day.Night, shape = Treatment)) +
geom_point() +
stat_chull(aes(fill = Day.Night), alpha = 0.3) +
theme_minimal()
# permanova
res <- adonis2(as.matrix(dist_coi_index) ~ interaction(COI_p$Day.Night,COI_p$Treatment))
res
# posthoc
pairwise.adonis2(dist_coi_index ~ MDS_coi_idx, data= COI_p %>% mutate(f=paste0(Day.Night,Treatment)), COI_p.adjust.m = "BY")
# posthoc
pairwise.adonis2(dist_coi_index ~ MDS_coi_idx, data= COI_p %>% mutate(MDS_coi_idx=paste0(Day.Night,Treatment)), COI_p.adjust.m = "BY")
# permutational dispersion
disp_coi_idx <- betadisper(dist_coi_idx,interaction(COI_p$Day.Night,COI_p$Treatment))
# permutational dispersion
disp_coi_idx <- betadisper(disp_coi_idx,interaction(COI_p$Day.Night,COI_p$Treatment))
# permutational dispersion
disp_coi_idx <- betadisper(dist_coi_idx,interaction(COI_p$Day.Night,COI_p$Treatment))
## eDNA index
dist_coi_idx <- COI_idx %>%
vegdist(method = "bray")
MDS_coi_idx <- dist_coi_index %>%
metaMDS(trymax = 1000)
COI_p %>%
bind_cols(MDS_coi_idx$points) %>%
ggplot(aes(x = MDS1, y = MDS2, color = Day.Night, shape = Treatment)) +
geom_point() +
stat_chull(aes(fill = Day.Night), alpha = 0.3) +
theme_minimal()
# permanova
res <- adonis2(as.matrix(dist_coi_index) ~ interaction(COI_p$Day.Night,COI_p$Treatment))
res
# posthoc
pairwise.adonis2(dist_coi_index ~ MDS_coi_idx, data= COI_p %>% mutate(MDS_coi_idx=paste0(Day.Night,Treatment)), COI_p.adjust.m = "BY")
# permutational dispersion
disp_coi_idx <- betadisper(dist_coi_idx,interaction(COI_p$Day.Night,COI_p$Treatment))
PERMDISP <- permutest(disp_coi_idx, pairwise = T ,permutations = how(nperm=999))
PERMDISP
#check ordering
rownames(COI_04) == COI_p$Tube
git status
